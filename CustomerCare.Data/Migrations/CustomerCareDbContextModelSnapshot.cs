// <auto-generated />
using System;
using CustomerCare.Data.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CustomerCare.Data.Migrations
{
    [DbContext(typeof(CustomerCareDbContext))]
    partial class CustomerCareDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CustomerCare.Data.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AmountTotal")
                        .HasColumnType("float");

                    b.Property<string>("Cellphone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountTotal = 0.0,
                            Cellphone = "074587545",
                            Date = new DateTime(2021, 6, 24, 22, 43, 15, 239, DateTimeKind.Local).AddTicks(1143),
                            Email = "john@mail.com",
                            FirstName = "John",
                            IsDeleted = false,
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            AmountTotal = 0.0,
                            Cellphone = "07451215",
                            Date = new DateTime(2021, 6, 24, 22, 43, 15, 240, DateTimeKind.Local).AddTicks(1164),
                            Email = "fedicashadmin@mail.com",
                            FirstName = "Fedi",
                            IsDeleted = false,
                            LastName = "Cash"
                        },
                        new
                        {
                            Id = 3,
                            AmountTotal = 0.0,
                            Cellphone = "011100444",
                            Date = new DateTime(2021, 6, 24, 22, 43, 15, 240, DateTimeKind.Local).AddTicks(1185),
                            Email = "health@department.gov.za",
                            FirstName = "Dpt Health",
                            IsDeleted = false,
                            LastName = "Saftey"
                        });
                });

            modelBuilder.Entity("CustomerCare.Data.Models.CustomerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TypeId");

                    b.ToTable("CustomerTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            TypeId = 3
                        });
                });

            modelBuilder.Entity("CustomerCare.Data.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Person"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Organisation"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Government"
                        });
                });

            modelBuilder.Entity("CustomerCare.Data.Models.CustomerType", b =>
                {
                    b.HasOne("CustomerCare.Data.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomerCare.Data.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
